com.android.vending.billing.IMarketBillingService -> com.android.vending.billing.IMarketBillingService:
    android.os.Bundle sendBillingRequest(android.os.Bundle) -> a
com.android.vending.billing.IMarketBillingService$Stub -> com.android.vending.billing.IMarketBillingService$Stub:
    com.android.vending.billing.IMarketBillingService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.billing.IMarketBillingService$Stub$Proxy -> com.android.vending.billing.IMarketBillingService$Stub$Proxy:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.Bundle sendBillingRequest(android.os.Bundle) -> a
com.halcyonwaves.apps.energize.ApplicationCore -> com.halcyonwaves.apps.energize.a:
    boolean isServiceRunning(android.content.Context,java.lang.String) -> a
    int getSelectedThemeId(android.content.Context) -> a
com.halcyonwaves.apps.energize.BatteryStateDisplayActivity -> com.halcyonwaves.apps.energize.BatteryStateDisplayActivity:
    android.widget.TextView textViewCurrentLoadingLevel -> a
    android.widget.TextView textViewCurrentChargingState -> b
    void init() -> a
    void showWhatsNewDialog() -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.jjoe64.graphview.GraphView$GraphViewSeries getBatteryStatisticData() -> c
    java.lang.String[] getBatteryStatisticVerticalLabels() -> d
    void showBatteryGraph() -> e
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.widget.TextView access$0(com.halcyonwaves.apps.energize.BatteryStateDisplayActivity) -> a
    android.widget.TextView access$1(com.halcyonwaves.apps.energize.BatteryStateDisplayActivity) -> b
com.halcyonwaves.apps.energize.BatteryStateDisplayActivity$1 -> com.halcyonwaves.apps.energize.b:
    com.halcyonwaves.apps.energize.BatteryStateDisplayActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.energize.BatteryStateDisplayActivity$2 -> com.halcyonwaves.apps.energize.c:
    com.halcyonwaves.apps.energize.BatteryStateDisplayActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.halcyonwaves.apps.energize.BatteryStateDisplayActivity$3 -> com.halcyonwaves.apps.energize.d:
    com.halcyonwaves.apps.energize.BatteryStateDisplayActivity this$0 -> a
    java.lang.String formatLabel(double,boolean) -> a
com.halcyonwaves.apps.energize.Consts -> com.halcyonwaves.apps.energize.e:
    long BILLING_RESPONSE_INVALID_REQUEST_ID -> a
com.halcyonwaves.apps.energize.Consts$PurchaseState -> com.halcyonwaves.apps.energize.f:
    com.halcyonwaves.apps.energize.Consts$PurchaseState PURCHASED -> a
    com.halcyonwaves.apps.energize.Consts$PurchaseState CANCELED -> b
    com.halcyonwaves.apps.energize.Consts$PurchaseState REFUNDED -> c
    com.halcyonwaves.apps.energize.Consts$PurchaseState[] ENUM$VALUES -> d
    com.halcyonwaves.apps.energize.Consts$PurchaseState valueOf(int) -> a
    com.halcyonwaves.apps.energize.Consts$PurchaseState[] values() -> values
    com.halcyonwaves.apps.energize.Consts$PurchaseState valueOf(java.lang.String) -> valueOf
com.halcyonwaves.apps.energize.Consts$ResponseCode -> com.halcyonwaves.apps.energize.g:
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_OK -> a
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_USER_CANCELED -> b
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_SERVICE_UNAVAILABLE -> c
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_BILLING_UNAVAILABLE -> d
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_ITEM_UNAVAILABLE -> e
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_DEVELOPER_ERROR -> f
    com.halcyonwaves.apps.energize.Consts$ResponseCode RESULT_ERROR -> g
    com.halcyonwaves.apps.energize.Consts$ResponseCode[] ENUM$VALUES -> h
    com.halcyonwaves.apps.energize.Consts$ResponseCode valueOf(int) -> a
    com.halcyonwaves.apps.energize.Consts$ResponseCode[] values() -> values
    com.halcyonwaves.apps.energize.Consts$ResponseCode valueOf(java.lang.String) -> valueOf
com.halcyonwaves.apps.energize.PurchaseDatabase -> com.halcyonwaves.apps.energize.h:
    java.lang.String[] HISTORY_COLUMNS -> a
    java.lang.String[] PURCHASED_COLUMNS -> b
    android.database.sqlite.SQLiteDatabase mDb -> c
    com.halcyonwaves.apps.energize.PurchaseDatabase$DatabaseHelper mDatabaseHelper -> d
    void close() -> a
    void insertOrder(java.lang.String,java.lang.String,com.halcyonwaves.apps.energize.Consts$PurchaseState,long,java.lang.String) -> b
    void updatePurchasedItem(java.lang.String,int) -> a
    int updatePurchase(java.lang.String,java.lang.String,com.halcyonwaves.apps.energize.Consts$PurchaseState,long,java.lang.String) -> a
com.halcyonwaves.apps.energize.PurchaseDatabase$DatabaseHelper -> com.halcyonwaves.apps.energize.i:
    com.halcyonwaves.apps.energize.PurchaseDatabase this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void createPurchaseTable(android.database.sqlite.SQLiteDatabase) -> a
com.halcyonwaves.apps.energize.PurchaseObserver -> com.halcyonwaves.apps.energize.j:
    android.os.Handler mHandler -> a
    java.lang.Class[] START_INTENT_SENDER_SIG -> b
    void onPurchaseStateChange(com.halcyonwaves.apps.energize.Consts$PurchaseState,java.lang.String,int,long,java.lang.String) -> a
    void postPurchaseStateChange(com.halcyonwaves.apps.energize.Consts$PurchaseState,java.lang.String,int,long,java.lang.String) -> b
com.halcyonwaves.apps.energize.PurchaseObserver$1 -> com.halcyonwaves.apps.energize.k:
    com.halcyonwaves.apps.energize.PurchaseObserver this$0 -> a
    com.halcyonwaves.apps.energize.Consts$PurchaseState val$purchaseState -> b
    java.lang.String val$itemId -> c
    int val$quantity -> d
    long val$purchaseTime -> e
    java.lang.String val$developerPayload -> f
    void run() -> run
com.halcyonwaves.apps.energize.ResponseHandler -> com.halcyonwaves.apps.energize.l:
    com.halcyonwaves.apps.energize.PurchaseObserver sPurchaseObserver -> a
    void purchaseResponse(android.content.Context,com.halcyonwaves.apps.energize.Consts$PurchaseState,java.lang.String,java.lang.String,long,java.lang.String) -> a
    com.halcyonwaves.apps.energize.PurchaseObserver access$0() -> a
com.halcyonwaves.apps.energize.ResponseHandler$1 -> com.halcyonwaves.apps.energize.m:
    android.content.Context val$context -> a
    java.lang.String val$orderId -> b
    java.lang.String val$productId -> c
    com.halcyonwaves.apps.energize.Consts$PurchaseState val$purchaseState -> d
    long val$purchaseTime -> e
    java.lang.String val$developerPayload -> f
    void run() -> run
com.halcyonwaves.apps.energize.Security -> com.halcyonwaves.apps.energize.n:
    java.security.SecureRandom RANDOM -> a
    java.util.HashSet sKnownNonces -> b
    long generateNonce() -> a
    void removeNonce(long) -> a
    boolean isNonceKnown(long) -> b
    java.util.ArrayList verifyPurchase(java.lang.String,java.lang.String) -> a
    java.security.PublicKey generatePublicKey(java.lang.String) -> a
    boolean verify(java.security.PublicKey,java.lang.String,java.lang.String) -> a
com.halcyonwaves.apps.energize.Security$VerifiedPurchase -> com.halcyonwaves.apps.energize.o:
    com.halcyonwaves.apps.energize.Consts$PurchaseState purchaseState -> a
    java.lang.String notificationId -> b
    java.lang.String productId -> c
    java.lang.String orderId -> d
    long purchaseTime -> e
    java.lang.String developerPayload -> f
com.halcyonwaves.apps.energize.SettingsActivity -> com.halcyonwaves.apps.energize.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.halcyonwaves.apps.energize.database.BatteryStatisticsDatabaseOpenHelper -> com.halcyonwaves.apps.energize.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.halcyonwaves.apps.energize.database.RawBatteryStatisicsTable -> com.halcyonwaves.apps.energize.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment:
    android.preference.Preference whatsNewPreference -> a
    android.preference.Preference showAppIconLicensePreference -> b
    android.preference.Preference showLicencePreference -> c
    android.preference.Preference sendDatabasePreference -> d
    android.os.Messenger monitorService -> e
    android.os.Messenger monitorServiceMessanger -> f
    android.content.ServiceConnection monitorServiceConnection -> g
    void doBindService() -> a
    void doUnbindService() -> b
    void onDestroy() -> onDestroy
    void showWhatsNewDialog() -> c
    void showAppIconLicensePreference() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void access$0(com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment,android.os.Messenger) -> a
    android.os.Messenger access$1(com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment) -> a
    android.os.Messenger access$2(com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment) -> b
    void access$3(com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment) -> c
    void access$4(com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment) -> d
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$1 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$1:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$2 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$2:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$3 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$3:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$4 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$4:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$5 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$5:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$6 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$6:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$7 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$7:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$IncomingHandler -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$IncomingHandler:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$IncomingHandler$1 -> com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$IncomingHandler$1:
    com.halcyonwaves.apps.energize.fragments.UnifiedPreferenceFragment$IncomingHandler this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.halcyonwaves.apps.energize.receivers.BatteryChangedReceiver -> com.halcyonwaves.apps.energize.receivers.a:
    com.halcyonwaves.apps.energize.services.MonitorBatteryStateService service -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.halcyonwaves.apps.energize.receivers.BillingReceiver -> com.halcyonwaves.apps.energize.receivers.BillingReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void purchaseStateChanged(android.content.Context,java.lang.String,java.lang.String) -> a
    void notify(android.content.Context,java.lang.String) -> a
    void checkResponseCode(android.content.Context,long,int) -> a
com.halcyonwaves.apps.energize.receivers.BootCompletedReceiver -> com.halcyonwaves.apps.energize.receivers.BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.halcyonwaves.apps.energize.services.BillingService -> com.halcyonwaves.apps.energize.services.BillingService:
    com.android.vending.billing.IMarketBillingService mService -> a
    java.util.LinkedList mPendingRequests -> b
    java.util.HashMap mSentRequests -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void handleCommand(android.content.Intent,int) -> a
    boolean bindToMarketBillingService() -> d
    boolean confirmNotifications(int,java.lang.String[]) -> a
    boolean getPurchaseInformation(int,java.lang.String[]) -> b
    void purchaseStateChanged(int,java.lang.String,java.lang.String) -> a
    void checkResponseCode(long,com.halcyonwaves.apps.energize.Consts$ResponseCode) -> a
    void runPendingRequests() -> e
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean access$0(com.halcyonwaves.apps.energize.services.BillingService) -> a
    java.util.LinkedList access$1() -> a
    com.android.vending.billing.IMarketBillingService access$2() -> b
    java.util.HashMap access$3() -> c
    void access$4(com.android.vending.billing.IMarketBillingService) -> a
com.halcyonwaves.apps.energize.services.BillingService$BillingRequest -> com.halcyonwaves.apps.energize.services.a:
    int mStartId -> c
    long mRequestId -> a
    com.halcyonwaves.apps.energize.services.BillingService this$0 -> b
    int getStartId() -> a
    boolean runRequest() -> b
    boolean runIfConnected() -> c
    void onRemoteException(android.os.RemoteException) -> a
    long run() -> d
    void responseCodeReceived(com.halcyonwaves.apps.energize.Consts$ResponseCode) -> a
    android.os.Bundle makeRequestBundle(java.lang.String) -> a
    void logResponseCode(java.lang.String,android.os.Bundle) -> a
com.halcyonwaves.apps.energize.services.BillingService$ConfirmNotifications -> com.halcyonwaves.apps.energize.services.b:
    java.lang.String[] mNotifyIds -> c
    com.halcyonwaves.apps.energize.services.BillingService this$0 -> d
    long run() -> d
com.halcyonwaves.apps.energize.services.BillingService$GetPurchaseInformation -> com.halcyonwaves.apps.energize.services.c:
    long mNonce -> c
    java.lang.String[] mNotifyIds -> d
    com.halcyonwaves.apps.energize.services.BillingService this$0 -> e
    long run() -> d
    void onRemoteException(android.os.RemoteException) -> a
com.halcyonwaves.apps.energize.services.MonitorBatteryStateService -> com.halcyonwaves.apps.energize.services.MonitorBatteryStateService:
    com.halcyonwaves.apps.energize.receivers.BatteryChangedReceiver batteryChangedReceiver -> a
    com.halcyonwaves.apps.energize.database.BatteryStatisticsDatabaseOpenHelper batteryDbOpenHelper -> b
    android.database.sqlite.SQLiteDatabase batteryStatisticsDatabase -> c
    java.util.ArrayList connectedClients -> d
    int lastChargingPercentage -> e
    int lastRemainingMinutes -> f
    boolean lastTimeCharging -> g
    android.os.Messenger serviceMessenger -> h
    android.app.NotificationManager notificationManager -> i
    android.app.Notification myNotification -> j
    android.content.SharedPreferences appPreferences -> k
    void insertPowerValue(int,int,int,double) -> a
    void onDestroy() -> onDestroy
    void stopMonitoring() -> a
    void startMonitoring() -> b
    void showNewPercentageNotification(int,int,boolean) -> a
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void sendCurrentChargingPctToClients() -> c
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    java.util.ArrayList access$0(com.halcyonwaves.apps.energize.services.MonitorBatteryStateService) -> a
    void access$1(com.halcyonwaves.apps.energize.services.MonitorBatteryStateService) -> b
    void access$2(com.halcyonwaves.apps.energize.services.MonitorBatteryStateService) -> c
    void access$3(com.halcyonwaves.apps.energize.services.MonitorBatteryStateService) -> d
    com.halcyonwaves.apps.energize.database.BatteryStatisticsDatabaseOpenHelper access$4(com.halcyonwaves.apps.energize.services.MonitorBatteryStateService) -> e
    android.database.sqlite.SQLiteDatabase access$5(com.halcyonwaves.apps.energize.services.MonitorBatteryStateService) -> f
com.halcyonwaves.apps.energize.services.MonitorBatteryStateService$IncomingHandler -> com.halcyonwaves.apps.energize.services.d:
    com.halcyonwaves.apps.energize.services.MonitorBatteryStateService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.halcyonwaves.apps.energize.util.Base64 -> com.halcyonwaves.apps.energize.b.a:
    byte[] ALPHABET -> b
    byte[] WEBSAFE_ALPHABET -> c
    byte[] DECODABET -> d
    byte[] WEBSAFE_DECODABET -> e
    boolean $assertionsDisabled -> a
    int decode4to3(byte[],int,byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
    byte[] decode(byte[],int,int) -> a
    byte[] decode(byte[],int,int,byte[]) -> a
com.halcyonwaves.apps.energize.util.Base64DecoderException -> com.halcyonwaves.apps.energize.b.b:
com.jjoe64.graphview.GraphView -> com.a.a.a:
    android.graphics.Paint paint -> b
    java.lang.String[] horlabels -> a
    java.lang.String[] verlabels -> c
    java.lang.String title -> d
    boolean scrollable -> e
    double viewportStart -> f
    double viewportSize -> g
    android.view.View viewVerLabels -> h
    com.jjoe64.graphview.compatible.ScaleGestureDetector scaleDetector -> i
    boolean scalable -> j
    java.text.NumberFormat numberformatter -> k
    java.util.List graphSeries -> l
    boolean showLegend -> m
    float legendWidth -> n
    com.jjoe64.graphview.GraphView$LegendAlign legendAlign -> o
    boolean manualYAxis -> p
    double manualMaxYValue -> q
    double manualMinYValue -> r
    int[] $SWITCH_TABLE$com$jjoe64$graphview$GraphView$LegendAlign -> s
    com.jjoe64.graphview.GraphView$GraphViewData[] _values(int) -> a
    void addSeries(com.jjoe64.graphview.GraphView$GraphViewSeries) -> a
    void drawLegend(android.graphics.Canvas,float,float) -> a
    void drawSeries(android.graphics.Canvas,com.jjoe64.graphview.GraphView$GraphViewData[],float,float,float,double,double,double,double,float) -> a
    java.lang.String formatLabel(double,boolean) -> a
    java.lang.String[] generateHorlabels(float) -> a
    java.lang.String[] generateVerlabels(float) -> b
    com.jjoe64.graphview.GraphView$LegendAlign getLegendAlign() -> getLegendAlign
    float getLegendWidth() -> getLegendWidth
    double getMaxX(boolean) -> a
    double getMaxY() -> getMaxY
    double getMinX(boolean) -> b
    double getMinY() -> getMinY
    boolean isScrollable() -> a
    void setHorizontalLabels(java.lang.String[]) -> setHorizontalLabels
    void setLegendAlign(com.jjoe64.graphview.GraphView$LegendAlign) -> setLegendAlign
    void setLegendWidth(float) -> setLegendWidth
    void setManualYAxis(boolean) -> setManualYAxis
    void setScalable(boolean) -> setScalable
    void setScrollable(boolean) -> setScrollable
    void setShowLegend(boolean) -> setShowLegend
    void setVerticalLabels(java.lang.String[]) -> setVerticalLabels
    double access$0(com.jjoe64.graphview.GraphView) -> a
    double access$1(com.jjoe64.graphview.GraphView) -> b
    double access$2(com.jjoe64.graphview.GraphView,boolean) -> a
    double access$3(com.jjoe64.graphview.GraphView,boolean) -> b
    java.lang.String[] access$4(com.jjoe64.graphview.GraphView) -> c
    java.lang.String[] access$5(com.jjoe64.graphview.GraphView,float) -> a
    void access$6(com.jjoe64.graphview.GraphView,java.lang.String[]) -> a
    java.lang.String[] access$7(com.jjoe64.graphview.GraphView) -> d
    java.lang.String[] access$8(com.jjoe64.graphview.GraphView,float) -> b
    void access$9(com.jjoe64.graphview.GraphView,java.lang.String[]) -> b
    java.lang.String access$10(com.jjoe64.graphview.GraphView) -> e
    java.util.List access$11(com.jjoe64.graphview.GraphView) -> f
    com.jjoe64.graphview.GraphView$GraphViewData[] access$12(com.jjoe64.graphview.GraphView,int) -> a
    boolean access$13(com.jjoe64.graphview.GraphView) -> g
    double access$14(com.jjoe64.graphview.GraphView) -> h
    double access$15(com.jjoe64.graphview.GraphView) -> i
    void access$16(com.jjoe64.graphview.GraphView,double) -> a
    android.view.View access$17(com.jjoe64.graphview.GraphView) -> j
    boolean access$18(com.jjoe64.graphview.GraphView) -> k
    com.jjoe64.graphview.compatible.ScaleGestureDetector access$19(com.jjoe64.graphview.GraphView) -> l
    int[] $SWITCH_TABLE$com$jjoe64$graphview$GraphView$LegendAlign() -> b
com.jjoe64.graphview.GraphView$1 -> com.a.a.b:
    com.jjoe64.graphview.GraphView this$0 -> a
com.jjoe64.graphview.GraphView$GraphViewContentView -> com.a.a.c:
    float lastTouchEventX -> b
    float graphwidth -> c
    com.jjoe64.graphview.GraphView this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMoveGesture(float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.jjoe64.graphview.GraphView$GraphViewData -> com.a.a.d:
    double valueX -> a
    double valueY -> b
com.jjoe64.graphview.GraphView$GraphViewSeries -> com.a.a.e:
    java.lang.String description -> a
    com.jjoe64.graphview.GraphView$GraphViewStyle style -> b
    com.jjoe64.graphview.GraphView$GraphViewData[] values -> c
com.jjoe64.graphview.GraphView$GraphViewStyle -> com.a.a.f:
    int color -> a
    int thickness -> b
com.jjoe64.graphview.GraphView$LegendAlign -> com.a.a.g:
    com.jjoe64.graphview.GraphView$LegendAlign TOP -> a
    com.jjoe64.graphview.GraphView$LegendAlign MIDDLE -> b
    com.jjoe64.graphview.GraphView$LegendAlign BOTTOM -> c
    com.jjoe64.graphview.GraphView$LegendAlign[] ENUM$VALUES -> d
    com.jjoe64.graphview.GraphView$LegendAlign[] values() -> values
    com.jjoe64.graphview.GraphView$LegendAlign valueOf(java.lang.String) -> valueOf
com.jjoe64.graphview.GraphView$VerLabelsView -> com.a.a.h:
    com.jjoe64.graphview.GraphView this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.jjoe64.graphview.LineGraphView -> com.a.a.i:
    android.graphics.Paint paintBackground -> a
    boolean drawBackground -> c
    void drawSeries(android.graphics.Canvas,com.jjoe64.graphview.GraphView$GraphViewData[],float,float,float,double,double,double,double,float) -> a
    boolean getDrawBackground() -> getDrawBackground
    void setDrawBackground(boolean) -> setDrawBackground
com.jjoe64.graphview.compatible.RealScaleGestureDetector -> com.a.a.a.a:
com.jjoe64.graphview.compatible.ScaleGestureDetector -> com.a.a.a.b:
    java.lang.Object realScaleGestureDetector -> a
    java.lang.reflect.Method method_getScaleFactor -> b
    java.lang.reflect.Method method_isInProgress -> c
    java.lang.reflect.Method method_onTouchEvent -> d
    boolean isInProgress() -> a
    void onTouchEvent(android.view.MotionEvent) -> a
com.jjoe64.graphview.compatible.ScaleGestureDetector$SimpleOnScaleGestureListener -> com.a.a.a.c:
